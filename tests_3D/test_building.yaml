---
  problem: 
    dimension: 3DDubins
    iterations: 100000 
    optimize: true
    solver: 'sff'

  TSP-solver: 
    path: ./solver/lkh/LKH-3.0.6/LKH
    type: LKH

  algorithm: {bias: 0.95, dubins-radius: 0.1, dubins-resolution: 2, m2r-ratio: 10, misses: 5}
  cities: ['[0; 0; 1.5; 0; 0]', '[0; 0; 4.5; 0; 0]', '[0; 0; 7.5; 0; 0]', '[0; 0; 10.5; 0; 0]', '[-4.7906588520729745;4.04232199006648;3.884648680541506;0;0]', '[-4.310400630227237;-2.8474481291879346;4.83985761619591;0;0]','[-1.3129368623588826;-1.3205009084756583;13.987274411892441;0;0]','[2.5967031717972997;5.196968466910395;6.3856488832365;1.57;0]','[5.78006058576403;-0.4325643729006563;2.624756226141187;0;0]','[4.420567939278007;-5.070292192792181;9.709818522880067;0;0]']
  
  #cities:
  #  - '[0; 0; 1.5; 0; 0]'
  
  #goal: '[0; 0; 10.5; 0; 0]'

  delimiters: {name: _, standard: ' '}
  distances: {collision: 0.01, sampling: 1.6, tree: 2}
  obstacles:
  - {path: .//maps//building.obj, position: '[0;0;0;0;0]', type: obj}
  
  range: {autodetect: false, pitch: '[-1.3;1.3]', x: '[-6;6]', y: '[-6;6]', z: '[0;14]'}
  robot: {path: ./models/robot_small.obj, type: obj}

  save:
    goals:
      path: 'output/goals.obj'
      type: 'obj'
    params:
      path: 'output/params.csv'
      id: 'sff_3d'
    TSP-file:
      path: 'output/tsp.tsp'
    TSP-paths:
      path: 'output/tsp.obj'
      type: 'obj'
    tree:
      path: 'output//tree5_normal_building.tri'
      type: 'map'
      frequency: '0'
    roadmap:
      path: 'output//rawPath5_normal_building.obj'
      type: 'obj'
